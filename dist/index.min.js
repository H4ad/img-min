const html=String.raw;let speed,kbps;const getIscaleUrl=(t,e,i,s,o)=>{if(!kbps){kbps=1;const o=new Date,r=`https://img-scale.now.sh?format=${e}&width=${(i=Math.floor(i))>50?i-i%50:i-i%5}&url=${encodeURIComponent(t)}&quality=${s}`;fetch(r,{cache:"reload",mode:"no-cors",method:"HEAD"}).then(t=>{console.log(Date.now()-o),speed=Date.now()-o,console.log("asd",t)})}return console.log("dtr",o,speed),speed&&(speed>1e3?(console.log(1),s=5):speed>300&&(console.log(2),s=20),console.log(s)),`https://img-scale.now.sh?format=${e}&width=${(i=Math.floor(i))>50?i-i%50:i-i%5}&url=${encodeURIComponent(t)}&quality=${s}`};let active,invisibles=[];const onScroll=()=>{!active&&invisibles.length>0&&(active=!0,setTimeout(()=>{invisibles.forEach(t=>t.checkVisibility()),invisibles=invisibles.filter(t=>!t.visible),active=!1},200))},template=html`
  <picture>
    <source type="image/webp" />
    <source type="image/jpeg" />
    <img part="img" />
  </picture>
  <style>
    picture,
    img {
      display: block;
      width: 100%;
    }

    picture {
      overflow: hidden;
      padding-top: 66%;
      position: relative;
    }
    img {
      position: absolute;
      opacity: 0;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      filter: blur(15px);
      transform: scale(1.03);
      transition: all 0.7s ease-in-out;
    }
    :host {
      display: block;
      background: #fffaf4;
      overflow: hidden;
    }

    :host([preview]),
    :host([loaded]) {
      background: none;
    }

    :host([preview]) img {
      opacity: 1;
    }

    :host([loaded]) img {
      opacity: 1;
      filter: blur(0px);
      transform: scale(1);
    }
  </style>
`,getPaddingTop=t=>{const[,e,i]=t.match(/([0-9]*\.?[0-9]*)\/([0-9]*\.?[0-9]*)/),s=parseFloat(e);return`${100*parseFloat(i)/s}%`};let postponedHighres=[];const pendingPreviews={};let isOnScrollInit;customElements.define("img-min",class extends HTMLElement{constructor(){super(),isOnScrollInit||(isOnScrollInit=!0,document.addEventListener("scroll",onScroll)),invisibles.push(this),this.maxWidth=0;const t=this.attachShadow({mode:"open"});t.innerHTML=template,this.picture=t.querySelector("picture"),this.picture.onloadedmetadata=(t=>{console.log("meta",t)}),this.img=this.shadowRoot.querySelector("img");const e=()=>{this.removeAttribute("preview"),this.setAttribute("loaded",""),this.img.onload=null};this.img.onload=(t=>{console.log(t),this.previewLoadTime=Date.now()-this.previewStartTime,delete pendingPreviews[this.getAttribute("src")],this.setAttribute("preview",""),postponedHighres.push(()=>this.resize()),0===Object.keys(pendingPreviews).length&&(postponedHighres.reverse().forEach(t=>t()),postponedHighres=[]),this.img.onload=e}),this.resize=this.resize.bind(this),addEventListener("resize",this.resize)}static get observedAttributes(){return["src","quality"]}get src(){return this.getAttribute("src")}get quality(){return this.getAttribute("quality")||50}set quality(t){this.setAttribute("quality",t),console.log("q",t),this.updateSrcset()}set src(t){this.setAttribute("src",t),this.updateSrcset()}attributeChangedCallback(t,e,i){e!==i&&(this[t]=i)}updateSrcset(){this.visible&&(this.jpeg=this.jpeg||this.shadowRoot.querySelector('source[type="image/jpeg"]'),this.jpeg.srcset=getIscaleUrl(this.src,"jpeg",this.width,this.quality,this.previewLoadTime),this.webp=this.webp||this.shadowRoot.querySelector('source[type="image/webp"]'),this.webp.srcset=`${getIscaleUrl(this.src,"webp",this.width,this.quality,this.previewLoadTime)} 1x,${getIscaleUrl(this.src,"webp",1.3*this.width,this.quality,this.previewLoadTime)} 2x`)}get width(){return this._width}set width(t){this._width=t,this.updateSrcset()}disconnectedCallback(){removeEventListener("resize",this.resize)}loadPreview(t){pendingPreviews[this.src]=!0,this.previewStartTime=Date.now(),this.width=Math.max(10,t/7),console.log("comple",this.img.complete)}checkVisibility(){const t=parseInt(this.getAttribute("lazy-dist"))||100,{top:e,bottom:i,width:s}=this.getBoundingClientRect(),o=i<-t,r=e>window.innerHeight+t;o||r||this.visible||(this.visible=!0,this.loadPreview(s))}resize(){this.visible&&(cancelAnimationFrame(this.af),this.af=requestAnimationFrame(()=>{const{width:t}=this.picture.getBoundingClientRect();t>this.maxWidth&&(this.maxWidth=t,this.width=t)}))}connectedCallback(){const t=this.getAttribute("aspect");t&&(this.img.style.height="100%",this.img.style.objectFit="cover",this.picture.style.paddingTop=getPaddingTop(t)),setTimeout(()=>{this.checkVisibility()},100)}});